{"version":3,"sources":["images/headshot.jpg","images/header.jpeg","images/background.jpeg","components/about.js","data/aboutData.js","data/linksData.js","components/header.js","components/education.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","n","Card","github","linkedIn","header","width","init","backgroundColor","library","fas","fontawesome_svg_core_index_es","add","free_solid_svg_icons_index_es","index_es","src_App_0","_Component","App","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","main","backgroundImage","background_default","a","backgroundSize","paper","section","opacity","color","textAlign","display","padding","react_default","createElement","className","components_header","style","Navbar_default","bg","variant","Brand","skills","education","experience","projects","undergrad","footer","react","Boolean","publicUrl","window","location","hostname","match","serviceWorker","navigator","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kQCKlCC,EAEUF,EAAaG,EAAAC,kNCPL,0ZCAbC,EAASL,EACTM,EAAQC,4GCQbL,EAEUF,EAERQ,6/CCHFN,EAEYF,EAIdS,mnSCHEP,GAEEQ,EAIR,wjBCCAC,KAAYC,ICnBZC,GAAA,EAAAC,IAAAC,GAAA,EAAAC,GAAA,OAAAC,GAAA,SAAAC,GAAA,SAAAC,IAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAD,EAAAD,GAAAE,OAAAQ,EAAA,EAAAR,CAAAD,EAAA,EAAAU,IAAA,SAAAC,MAAA,eAAA5B,EAAA,CAAA6B,KAAA,CAAAC,gBAAA,OAAAC,GAAAC,EAAA,IAAAC,eAAA,QAAAC,MAAA,GAAAC,QAAA,CAAA3B,gBAAA,QAAA4B,QAAA,GAAAC,MAAA,QAAAC,UAAA,SAAAC,QAAA,QAAAC,QAAA,YAAAC,EAAAT,EAAAU,cAAA,OAAAC,UAAA,OAAAF,EAAAT,EAAAU,cAAAE,EAAA,MAAAH,EAAAT,EAAAU,cAAA,OAAAG,MAAA7C,EAAA6B,MAAAY,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAI,GAAAd,EAAA,CAAAe,GAAA,OAAAC,QAAA,QAAAP,EAAAT,EAAAU,cAAAI,GAAAd,EAAAiB,MAAA,gBAAAR,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAQ,EAAA,MAAAT,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAI,GAAAd,EAAA,CAAAe,GAAA,OAAAC,QAAA,QAAAP,EAAAT,EAAAU,cAAAI,GAAAd,EAAAiB,MAAA,mBAAAR,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAS,EAAA,MAAAV,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAI,GAAAd,EAAA,CAAAe,GAAA,OAAAC,QAAA,QAAAP,EAAAT,EAAAU,cAAAI,GAAAd,EAAAiB,MAAA,oBAAAR,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAU,EAAA,MAAAX,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAI,GAAAd,EAAA,CAAAe,GAAA,OAAAC,QAAA,QAAAP,EAAAT,EAAAU,cAAAI,GAAAd,EAAAiB,MAAA,kBAAAR,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAW,EAAA,MAAAZ,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAI,GAAAd,EAAA,CAAAe,GAAA,OAAAC,QAAA,QAAAP,EAAAT,EAAAU,cAAAI,GAAAd,EAAAiB,MAAA,kCAAAR,EAAAT,EAAAU,cAAA,WAAAD,EAAAT,EAAAU,cAAAY,EAAA,MAAAb,EAAAT,EAAAU,cAAA,YAAAD,EAAAT,EAAAU,cAAAa,GAAA,WAAAtC,EAAA,CAAAuC,EAAA,WAwBsBC,QACdC,cADcC,OAAsCC,SAANC,UAGhD,UAAAF,OAAAC,SAAAC,UACAF,OAAAC,SAAAC,SAAAC,MAAA,2DClBNC,uEAFA,kBAAAC,qBAAAD,cAAAE,MAAAC,KAAA,SAAAC,KAAAC","file":"static/js/main.2c66b619.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.6d4dd2fd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/header.d7c071b4.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/background.dfecbb85.jpeg\";","import React from 'react';\r\nimport { about_data } from '../data/aboutData'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nconst styles = {\r\n    paper: {\r\n        margin: '0px 250px', // top/bottom 0px left/right 150px\r\n    },\r\n    elevator: {\r\n        backgroundColor: 'black',\r\n        opacity: 0.60,\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        display: 'block',\r\n        padding: 25,\r\n    },\r\n};\r\n\r\nconst About = (props) => (\r\n    <Card body style={styles.elevator}>{ about_data }</Card>\r\n);\r\n\r\nexport default About","export var about_data = 'My name is Rohan Patel; I am a driven developer with a passion for software and technology. \\\r\nI am working at BNY Mellon in Pittsburgh; here I am creating features and services for their internal \\\r\ncloud hosting platform. I am also an alumni of the University of Pittsburgh and am currently enrolled \\\r\npart-time at  the Georgia Institute of Technology for my Master in Computer Science.' ","export var github = 'https://github.com/patelrohanv'\r\nexport var linkedIn = 'https://www.linkedin.com/in/patelrohanv/'\r\nexport var resume = 'https://resume.creddle.io/resume/mv7do3zgiw'","import React from 'react';\r\nimport About from './about'\r\nimport headshot from '../images/headshot.jpg'\r\nimport background from '../images/header.jpeg'\r\nimport { github, linkedIn, resume } from '../data/linksData'\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\r\n\r\nconst styles = {\r\n    headshot: {\r\n        margin: 'auto',\r\n        display: 'block',\r\n        width: '230px',\r\n        border: 'solid 4px #fff',\r\n        borderRadius: '50%',\r\n    },\r\n    header: {\r\n        backgroundImage: 'url(' + background + ')',\r\n        height: '550px',\r\n        backgroundSize: 'cover',\r\n        overflow: 'hidden',\r\n    },\r\n    button: {\r\n        margin: '10px',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n    }\r\n};\r\n\r\nconst Header = (props) => {\r\n\r\n    return (\r\n        < div style={styles.header} >\r\n            <br />\r\n            <img src={headshot} alt=\"headshot\" style={styles.headshot} />\r\n            <br />\r\n            <About />\r\n            <br />\r\n            <div>\r\n                <ButtonToolbar>\r\n                    <Button style={styles.button} variant=\"info\" href={linkedIn} target=\"_blank\"> LinkedIn</Button>\r\n                    <Button style={styles.button} variant=\"info\" href={github} target=\"_blank\">GitHub</Button>\r\n                    <Button style={styles.button} variant=\"info\" href={resume} target=\"_blank\"> Resume</Button>\r\n                </ButtonToolbar>\r\n            </div>\r\n            <br />\r\n        </div >\r\n    )\r\n};\r\n\r\nexport default Header","import React from 'react';\r\nimport { education_data } from '../data/educationData';\r\n\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\nimport CardDeck from 'react-bootstrap/CardDeck'\r\nimport ListGroup from 'react-bootstrap/ListGroup'\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 275,\r\n    },\r\n};\r\n\r\nAOS.init();\r\n\r\nconst Education = (props) => {\r\n\r\n    const schoolInfo = education_data.map((e) => {\r\n        const classes = e.coursework.map((c) => {\r\n            return (\r\n                <div>\r\n                    <ListGroup.Item variant=\"secondary\">\r\n                       {c}\r\n                    </ListGroup.Item>\r\n                </div>\r\n            );\r\n        });\r\n        return (\r\n            <Card\r\n                bg=\"secondary\" \r\n                style={styles.card}\r\n                data-aos='fade-up'\r\n                data-aos-delay='300'\r\n                data-aos-duration='5000'\r\n            >\r\n                <Card.Body>\r\n                    <Card.Title>\r\n                        {e.school}\r\n                    </Card.Title>\r\n                    <Card.Subtitle>\r\n                        {e.degree}\r\n                        <br />\r\n                        {e.graduated}\r\n                    </Card.Subtitle>\r\n                    <Card.Text>\r\n                        <br />\r\n                        <ListGroup>\r\n                            {classes}\r\n                        </ListGroup>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    });\r\n    return (\r\n        <CardDeck>\r\n            {schoolInfo}\r\n        </CardDeck>\r\n    );\r\n}\r\n\r\nexport default Education","import React from 'react';\r\n\r\nimport { github, linkedIn } from '../data/linksData';\r\nimport { personal } from '../data/personal'\r\n\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nimport { faGithub, faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst styles = {\r\n    footer: {\r\n        backgroundColor: 'grey',\r\n    },\r\n};\r\n\r\nconst Footer = () => (\r\n    <Container style={styles.footer}>\r\n        <Row>\r\n            <Col>{personal.name}</Col>\r\n            <Col></Col>\r\n            <Col><FontAwesomeIcon icon={faGithub} href={github}/></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>{personal.location}</Col>\r\n            <Col></Col>\r\n            <Col><FontAwesomeIcon icon={faLinkedinIn} href={linkedIn}/></Col>\r\n        </Row>\r\n        <Row>\r\n            <Col>Designed and Built by Rohan Patel</Col>\r\n        </Row>\r\n    </Container>\r\n);\r\n\r\nexport default Footer","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport Header from './components/header';\r\nimport Education from './components/education';\r\nimport Skills from './components/skills';\r\nimport Experience from './components/experience';\r\nimport Projects from './components/projects';\r\nimport Undergrad from './components/undergrad';\r\nimport Footer from './components/footer';\r\n\r\nimport background from './images/background.jpeg'\r\n\r\n\r\nimport Navbar from 'react-bootstrap/Navbar'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\n\r\nlibrary.add(fas, fab)\r\n\r\nclass App extends Component {\r\n    render() {\r\n        const styles = {\r\n            main: {\r\n                backgroundImage: 'url(' + background + ')',\r\n                backgroundSize: '100%',\r\n            },\r\n            paper: {\r\n            },\r\n            section: {\r\n                backgroundColor: 'black',\r\n                opacity: 0.80,\r\n                color: 'white',\r\n                textAlign: 'center',\r\n                display: 'block',\r\n                padding: 25,\r\n            },\r\n        }\r\n        return (\r\n            <div className=\"App\">\r\n                <Header />\r\n                <div style={styles.main}>\r\n                    <br />\r\n                    <Navbar bg=\"dark\" variant=\"dark\" >\r\n                        <Navbar.Brand>\r\n                            {'Skills'}\r\n                        </Navbar.Brand>\r\n                    </Navbar>\r\n                    <br />\r\n                    <Skills />\r\n                    <br />\r\n                    <Navbar bg=\"dark\" variant=\"dark\" >\r\n                        <Navbar.Brand>\r\n                            {'Education'}\r\n                        </Navbar.Brand>\r\n                    </Navbar>\r\n                    <br />\r\n                    <Education />\r\n                    <br />\r\n                    <Navbar bg=\"dark\" variant=\"dark\" >\r\n                        <Navbar.Brand>\r\n                            {'Experience'}\r\n                        </Navbar.Brand>\r\n                    </Navbar>\r\n                    <br />\r\n                    <Experience />\r\n                    <br />\r\n                    <Navbar bg=\"dark\" variant=\"dark\" >\r\n                        <Navbar.Brand>\r\n                            {'Projects'}\r\n                        </Navbar.Brand>\r\n                    </Navbar>\r\n                    <br />\r\n                    <Projects />\r\n                    <br />\r\n                    <Navbar bg=\"dark\" variant=\"dark\" >\r\n                        <Navbar.Brand>\r\n                            {'Undergraduate Experience'}\r\n                        </Navbar.Brand>\r\n                    </Navbar>\r\n                    <br />\r\n                    <Undergrad />\r\n                    <br />\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}